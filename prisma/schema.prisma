generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String
  password      String
  role          Role      @default(USER)
  refreshToken  String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  tenantId      String?
  tenant        tenant?   @relation("Tenant", fields: [tenantId], references: [id])
  assignedTasks Task[]    @relation("AssignedTasks")
  ownedProjects Project[] @relation("ProjectOwner")

  @@map("users")
}

model tenant {
  id              String    @id @default(uuid())
  name            String
  subdomain       String    @unique
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  users           User[]    @relation("Tenant")
  projects        Project[] @relation("TenantProjects")
}


model Project {
  id          String   @id @default(uuid())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  ownerId     String
  tenantId    String?
  tenant      tenant?   @relation("TenantProjects", fields: [tenantId], references: [id])
  owner       User     @relation("ProjectOwner", fields: [ownerId], references: [id])
  tasks       Task[]   @relation("ProjectTasks")

  @@map("projects")
}

model Task {
  id           String    @id @default(uuid())
  title        String
  description  String
  status       Status    @default(TODO)
  priority     Priority  @default(MEDIUM)
  dueDate      DateTime
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  projectId    String
  project      Project   @relation("ProjectTasks", fields: [projectId], references: [id], onDelete: Cascade)
  assignedToId String?
  assignedTo   User?    @relation("AssignedTasks", fields: [assignedToId], references: [id])

  @@map("tasks")
}

enum Status {
  TODO
  IN_PROGRESS
  REVIEW
  DONE
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum Role {
  USER
  MANAGER
  ADMIN
}
